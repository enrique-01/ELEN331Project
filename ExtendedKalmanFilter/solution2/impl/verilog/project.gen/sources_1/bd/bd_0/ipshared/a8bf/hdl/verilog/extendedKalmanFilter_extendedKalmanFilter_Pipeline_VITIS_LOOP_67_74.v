// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module extendedKalmanFilter_extendedKalmanFilter_Pipeline_VITIS_LOOP_67_74 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        P_1_3_load,
        P_1_2_load,
        P_1_1_load,
        P_1_0_load,
        p_reload51,
        p_reload50,
        p_reload49,
        p_reload48,
        mux_case_3161403_out,
        mux_case_3161403_out_ap_vld,
        mux_case_2160400_out,
        mux_case_2160400_out_ap_vld,
        mux_case_1159397_out,
        mux_case_1159397_out_ap_vld,
        mux_case_0158394_out,
        mux_case_0158394_out_ap_vld,
        P_1_0,
        P_1_0_ap_vld,
        P_1_1,
        P_1_1_ap_vld,
        P_1_2,
        P_1_2_ap_vld,
        P_1_3,
        P_1_3_ap_vld,
        grp_fu_2002_p_din0,
        grp_fu_2002_p_din1,
        grp_fu_2002_p_opcode,
        grp_fu_2002_p_dout0,
        grp_fu_2002_p_ce,
        grp_fu_2006_p_din0,
        grp_fu_2006_p_din1,
        grp_fu_2006_p_opcode,
        grp_fu_2006_p_dout0,
        grp_fu_2006_p_ce,
        grp_fu_2010_p_din0,
        grp_fu_2010_p_din1,
        grp_fu_2010_p_opcode,
        grp_fu_2010_p_dout0,
        grp_fu_2010_p_ce,
        grp_fu_2014_p_din0,
        grp_fu_2014_p_din1,
        grp_fu_2014_p_opcode,
        grp_fu_2014_p_dout0,
        grp_fu_2014_p_ce,
        grp_fu_2018_p_din0,
        grp_fu_2018_p_din1,
        grp_fu_2018_p_dout0,
        grp_fu_2018_p_ce,
        grp_fu_2022_p_din0,
        grp_fu_2022_p_din1,
        grp_fu_2022_p_dout0,
        grp_fu_2022_p_ce,
        grp_fu_2026_p_din0,
        grp_fu_2026_p_din1,
        grp_fu_2026_p_dout0,
        grp_fu_2026_p_ce,
        grp_fu_2046_p_din0,
        grp_fu_2046_p_din1,
        grp_fu_2046_p_dout0,
        grp_fu_2046_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] P_1_3_load;
input  [63:0] P_1_2_load;
input  [63:0] P_1_1_load;
input  [63:0] P_1_0_load;
input  [63:0] p_reload51;
input  [63:0] p_reload50;
input  [63:0] p_reload49;
input  [63:0] p_reload48;
output  [63:0] mux_case_3161403_out;
output   mux_case_3161403_out_ap_vld;
output  [63:0] mux_case_2160400_out;
output   mux_case_2160400_out_ap_vld;
output  [63:0] mux_case_1159397_out;
output   mux_case_1159397_out_ap_vld;
output  [63:0] mux_case_0158394_out;
output   mux_case_0158394_out_ap_vld;
output  [63:0] P_1_0;
output   P_1_0_ap_vld;
output  [63:0] P_1_1;
output   P_1_1_ap_vld;
output  [63:0] P_1_2;
output   P_1_2_ap_vld;
output  [63:0] P_1_3;
output   P_1_3_ap_vld;
output  [63:0] grp_fu_2002_p_din0;
output  [63:0] grp_fu_2002_p_din1;
output  [0:0] grp_fu_2002_p_opcode;
input  [63:0] grp_fu_2002_p_dout0;
output   grp_fu_2002_p_ce;
output  [63:0] grp_fu_2006_p_din0;
output  [63:0] grp_fu_2006_p_din1;
output  [1:0] grp_fu_2006_p_opcode;
input  [63:0] grp_fu_2006_p_dout0;
output   grp_fu_2006_p_ce;
output  [63:0] grp_fu_2010_p_din0;
output  [63:0] grp_fu_2010_p_din1;
output  [1:0] grp_fu_2010_p_opcode;
input  [63:0] grp_fu_2010_p_dout0;
output   grp_fu_2010_p_ce;
output  [63:0] grp_fu_2014_p_din0;
output  [63:0] grp_fu_2014_p_din1;
output  [1:0] grp_fu_2014_p_opcode;
input  [63:0] grp_fu_2014_p_dout0;
output   grp_fu_2014_p_ce;
output  [63:0] grp_fu_2018_p_din0;
output  [63:0] grp_fu_2018_p_din1;
input  [63:0] grp_fu_2018_p_dout0;
output   grp_fu_2018_p_ce;
output  [63:0] grp_fu_2022_p_din0;
output  [63:0] grp_fu_2022_p_din1;
input  [63:0] grp_fu_2022_p_dout0;
output   grp_fu_2022_p_ce;
output  [63:0] grp_fu_2026_p_din0;
output  [63:0] grp_fu_2026_p_din1;
input  [63:0] grp_fu_2026_p_dout0;
output   grp_fu_2026_p_ce;
output  [63:0] grp_fu_2046_p_din0;
output  [63:0] grp_fu_2046_p_din1;
input  [63:0] grp_fu_2046_p_dout0;
output   grp_fu_2046_p_ce;

reg ap_idle;
reg mux_case_3161403_out_ap_vld;
reg mux_case_2160400_out_ap_vld;
reg mux_case_1159397_out_ap_vld;
reg mux_case_0158394_out_ap_vld;
reg P_1_0_ap_vld;
reg P_1_1_ap_vld;
reg P_1_2_ap_vld;
reg P_1_3_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln67_fu_229_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln67_reg_410;
reg   [0:0] icmp_ln67_reg_410_pp0_iter1_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter2_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter3_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter4_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter5_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter6_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter7_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter8_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter9_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter10_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter11_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter12_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter13_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter14_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter15_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter16_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter17_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter18_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter19_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter20_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter21_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter22_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter23_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter24_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter25_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter26_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter27_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter28_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter29_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter30_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter31_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter32_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter33_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter34_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter35_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter36_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter37_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter38_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter39_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter40_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter41_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter42_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter43_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter44_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter45_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter46_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter47_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter48_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter49_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter50_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter51_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter52_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter53_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter54_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter55_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter56_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter57_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter58_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter59_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter60_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter61_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter62_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter63_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter64_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter65_reg;
reg   [0:0] icmp_ln67_reg_410_pp0_iter66_reg;
wire   [1:0] trunc_ln67_fu_241_p1;
reg   [1:0] trunc_ln67_reg_414;
reg   [1:0] trunc_ln67_reg_414_pp0_iter1_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter2_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter3_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter4_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter5_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter6_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter7_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter8_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter9_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter10_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter11_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter12_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter13_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter14_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter15_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter16_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter17_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter18_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter19_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter20_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter21_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter22_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter23_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter24_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter25_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter26_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter27_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter28_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter29_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter30_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter31_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter32_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter33_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter34_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter35_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter36_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter37_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter38_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter39_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter40_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter41_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter42_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter43_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter44_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter45_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter46_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter47_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter48_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter49_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter50_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter51_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter52_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter53_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter54_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter55_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter56_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter57_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter58_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter59_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter60_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter61_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter62_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter63_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter64_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter65_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter66_reg;
reg   [1:0] trunc_ln67_reg_414_pp0_iter67_reg;
wire   [63:0] tmp_s_fu_245_p6;
reg   [63:0] tmp_s_reg_421;
wire   [63:0] tmp_7_fu_264_p6;
reg   [63:0] tmp_7_reg_426;
reg   [63:0] mul77_1_reg_431;
wire   [63:0] tmp_8_fu_277_p6;
reg   [63:0] tmp_8_reg_436;
reg   [63:0] add82_1_reg_441;
reg   [63:0] mul77_1_1_reg_446;
wire   [63:0] tmp_9_fu_290_p6;
reg   [63:0] tmp_9_reg_451;
reg   [63:0] add82_1_1_reg_456;
reg   [63:0] mul77_1_2_reg_461;
reg   [63:0] add82_1_2_reg_466;
reg   [63:0] mul77_1_3_reg_471;
reg   [63:0] add82_1_3_reg_476;
wire    ap_block_pp0_stage0;
reg   [2:0] j_fu_72;
wire   [2:0] add_ln67_fu_235_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_j_5;
reg   [63:0] mux_case_0158394_fu_76;
reg   [63:0] mux_case_1159397_fu_80;
reg   [63:0] mux_case_2160400_fu_84;
reg   [63:0] mux_case_3161403_fu_88;
wire    ap_block_pp0_stage0_01001;
wire   [1:0] tmp_s_fu_245_p5;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 j_fu_72 = 3'd0;
#0 mux_case_0158394_fu_76 = 64'd0;
#0 mux_case_1159397_fu_80 = 64'd0;
#0 mux_case_2160400_fu_84 = 64'd0;
#0 mux_case_3161403_fu_88 = 64'd0;
#0 ap_done_reg = 1'b0;
end

extendedKalmanFilter_mux_4_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_4_2_64_1_1_U163(
    .din0(64'd4607182418800017408),
    .din1(64'd0),
    .din2(64'd0),
    .din3(64'd0),
    .din4(tmp_s_fu_245_p5),
    .dout(tmp_s_fu_245_p6)
);

extendedKalmanFilter_mux_4_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_4_2_64_1_1_U164(
    .din0(64'd0),
    .din1(64'd4607182418800017408),
    .din2(64'd0),
    .din3(64'd0),
    .din4(trunc_ln67_reg_414_pp0_iter12_reg),
    .dout(tmp_7_fu_264_p6)
);

extendedKalmanFilter_mux_4_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_4_2_64_1_1_U165(
    .din0(64'd0),
    .din1(64'd0),
    .din2(64'd4607182418800017408),
    .din3(64'd0),
    .din4(trunc_ln67_reg_414_pp0_iter25_reg),
    .dout(tmp_8_fu_277_p6)
);

extendedKalmanFilter_mux_4_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_4_2_64_1_1_U166(
    .din0(64'd0),
    .din1(64'd0),
    .din2(64'd0),
    .din3(64'd4607182418800017408),
    .din4(trunc_ln67_reg_414_pp0_iter38_reg),
    .dout(tmp_9_fu_290_p6)
);

extendedKalmanFilter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter67_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln67_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_72 <= add_ln67_fu_235_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_72 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            mux_case_0158394_fu_76 <= P_1_0_load;
        end else if (((trunc_ln67_reg_414_pp0_iter67_reg == 2'd0) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
            mux_case_0158394_fu_76 <= add82_1_3_reg_476;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            mux_case_1159397_fu_80 <= P_1_1_load;
        end else if (((trunc_ln67_reg_414_pp0_iter67_reg == 2'd1) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
            mux_case_1159397_fu_80 <= add82_1_3_reg_476;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            mux_case_2160400_fu_84 <= P_1_2_load;
        end else if (((trunc_ln67_reg_414_pp0_iter67_reg == 2'd2) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
            mux_case_2160400_fu_84 <= add82_1_3_reg_476;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            mux_case_3161403_fu_88 <= P_1_3_load;
        end else if (((trunc_ln67_reg_414_pp0_iter67_reg == 2'd3) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
            mux_case_3161403_fu_88 <= add82_1_3_reg_476;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add82_1_1_reg_456 <= grp_fu_2006_p_dout0;
        add82_1_2_reg_466 <= grp_fu_2010_p_dout0;
        add82_1_3_reg_476 <= grp_fu_2014_p_dout0;
        add82_1_reg_441 <= grp_fu_2002_p_dout0;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln67_reg_410_pp0_iter10_reg <= icmp_ln67_reg_410_pp0_iter9_reg;
        icmp_ln67_reg_410_pp0_iter11_reg <= icmp_ln67_reg_410_pp0_iter10_reg;
        icmp_ln67_reg_410_pp0_iter12_reg <= icmp_ln67_reg_410_pp0_iter11_reg;
        icmp_ln67_reg_410_pp0_iter13_reg <= icmp_ln67_reg_410_pp0_iter12_reg;
        icmp_ln67_reg_410_pp0_iter14_reg <= icmp_ln67_reg_410_pp0_iter13_reg;
        icmp_ln67_reg_410_pp0_iter15_reg <= icmp_ln67_reg_410_pp0_iter14_reg;
        icmp_ln67_reg_410_pp0_iter16_reg <= icmp_ln67_reg_410_pp0_iter15_reg;
        icmp_ln67_reg_410_pp0_iter17_reg <= icmp_ln67_reg_410_pp0_iter16_reg;
        icmp_ln67_reg_410_pp0_iter18_reg <= icmp_ln67_reg_410_pp0_iter17_reg;
        icmp_ln67_reg_410_pp0_iter19_reg <= icmp_ln67_reg_410_pp0_iter18_reg;
        icmp_ln67_reg_410_pp0_iter20_reg <= icmp_ln67_reg_410_pp0_iter19_reg;
        icmp_ln67_reg_410_pp0_iter21_reg <= icmp_ln67_reg_410_pp0_iter20_reg;
        icmp_ln67_reg_410_pp0_iter22_reg <= icmp_ln67_reg_410_pp0_iter21_reg;
        icmp_ln67_reg_410_pp0_iter23_reg <= icmp_ln67_reg_410_pp0_iter22_reg;
        icmp_ln67_reg_410_pp0_iter24_reg <= icmp_ln67_reg_410_pp0_iter23_reg;
        icmp_ln67_reg_410_pp0_iter25_reg <= icmp_ln67_reg_410_pp0_iter24_reg;
        icmp_ln67_reg_410_pp0_iter26_reg <= icmp_ln67_reg_410_pp0_iter25_reg;
        icmp_ln67_reg_410_pp0_iter27_reg <= icmp_ln67_reg_410_pp0_iter26_reg;
        icmp_ln67_reg_410_pp0_iter28_reg <= icmp_ln67_reg_410_pp0_iter27_reg;
        icmp_ln67_reg_410_pp0_iter29_reg <= icmp_ln67_reg_410_pp0_iter28_reg;
        icmp_ln67_reg_410_pp0_iter2_reg <= icmp_ln67_reg_410_pp0_iter1_reg;
        icmp_ln67_reg_410_pp0_iter30_reg <= icmp_ln67_reg_410_pp0_iter29_reg;
        icmp_ln67_reg_410_pp0_iter31_reg <= icmp_ln67_reg_410_pp0_iter30_reg;
        icmp_ln67_reg_410_pp0_iter32_reg <= icmp_ln67_reg_410_pp0_iter31_reg;
        icmp_ln67_reg_410_pp0_iter33_reg <= icmp_ln67_reg_410_pp0_iter32_reg;
        icmp_ln67_reg_410_pp0_iter34_reg <= icmp_ln67_reg_410_pp0_iter33_reg;
        icmp_ln67_reg_410_pp0_iter35_reg <= icmp_ln67_reg_410_pp0_iter34_reg;
        icmp_ln67_reg_410_pp0_iter36_reg <= icmp_ln67_reg_410_pp0_iter35_reg;
        icmp_ln67_reg_410_pp0_iter37_reg <= icmp_ln67_reg_410_pp0_iter36_reg;
        icmp_ln67_reg_410_pp0_iter38_reg <= icmp_ln67_reg_410_pp0_iter37_reg;
        icmp_ln67_reg_410_pp0_iter39_reg <= icmp_ln67_reg_410_pp0_iter38_reg;
        icmp_ln67_reg_410_pp0_iter3_reg <= icmp_ln67_reg_410_pp0_iter2_reg;
        icmp_ln67_reg_410_pp0_iter40_reg <= icmp_ln67_reg_410_pp0_iter39_reg;
        icmp_ln67_reg_410_pp0_iter41_reg <= icmp_ln67_reg_410_pp0_iter40_reg;
        icmp_ln67_reg_410_pp0_iter42_reg <= icmp_ln67_reg_410_pp0_iter41_reg;
        icmp_ln67_reg_410_pp0_iter43_reg <= icmp_ln67_reg_410_pp0_iter42_reg;
        icmp_ln67_reg_410_pp0_iter44_reg <= icmp_ln67_reg_410_pp0_iter43_reg;
        icmp_ln67_reg_410_pp0_iter45_reg <= icmp_ln67_reg_410_pp0_iter44_reg;
        icmp_ln67_reg_410_pp0_iter46_reg <= icmp_ln67_reg_410_pp0_iter45_reg;
        icmp_ln67_reg_410_pp0_iter47_reg <= icmp_ln67_reg_410_pp0_iter46_reg;
        icmp_ln67_reg_410_pp0_iter48_reg <= icmp_ln67_reg_410_pp0_iter47_reg;
        icmp_ln67_reg_410_pp0_iter49_reg <= icmp_ln67_reg_410_pp0_iter48_reg;
        icmp_ln67_reg_410_pp0_iter4_reg <= icmp_ln67_reg_410_pp0_iter3_reg;
        icmp_ln67_reg_410_pp0_iter50_reg <= icmp_ln67_reg_410_pp0_iter49_reg;
        icmp_ln67_reg_410_pp0_iter51_reg <= icmp_ln67_reg_410_pp0_iter50_reg;
        icmp_ln67_reg_410_pp0_iter52_reg <= icmp_ln67_reg_410_pp0_iter51_reg;
        icmp_ln67_reg_410_pp0_iter53_reg <= icmp_ln67_reg_410_pp0_iter52_reg;
        icmp_ln67_reg_410_pp0_iter54_reg <= icmp_ln67_reg_410_pp0_iter53_reg;
        icmp_ln67_reg_410_pp0_iter55_reg <= icmp_ln67_reg_410_pp0_iter54_reg;
        icmp_ln67_reg_410_pp0_iter56_reg <= icmp_ln67_reg_410_pp0_iter55_reg;
        icmp_ln67_reg_410_pp0_iter57_reg <= icmp_ln67_reg_410_pp0_iter56_reg;
        icmp_ln67_reg_410_pp0_iter58_reg <= icmp_ln67_reg_410_pp0_iter57_reg;
        icmp_ln67_reg_410_pp0_iter59_reg <= icmp_ln67_reg_410_pp0_iter58_reg;
        icmp_ln67_reg_410_pp0_iter5_reg <= icmp_ln67_reg_410_pp0_iter4_reg;
        icmp_ln67_reg_410_pp0_iter60_reg <= icmp_ln67_reg_410_pp0_iter59_reg;
        icmp_ln67_reg_410_pp0_iter61_reg <= icmp_ln67_reg_410_pp0_iter60_reg;
        icmp_ln67_reg_410_pp0_iter62_reg <= icmp_ln67_reg_410_pp0_iter61_reg;
        icmp_ln67_reg_410_pp0_iter63_reg <= icmp_ln67_reg_410_pp0_iter62_reg;
        icmp_ln67_reg_410_pp0_iter64_reg <= icmp_ln67_reg_410_pp0_iter63_reg;
        icmp_ln67_reg_410_pp0_iter65_reg <= icmp_ln67_reg_410_pp0_iter64_reg;
        icmp_ln67_reg_410_pp0_iter66_reg <= icmp_ln67_reg_410_pp0_iter65_reg;
        icmp_ln67_reg_410_pp0_iter6_reg <= icmp_ln67_reg_410_pp0_iter5_reg;
        icmp_ln67_reg_410_pp0_iter7_reg <= icmp_ln67_reg_410_pp0_iter6_reg;
        icmp_ln67_reg_410_pp0_iter8_reg <= icmp_ln67_reg_410_pp0_iter7_reg;
        icmp_ln67_reg_410_pp0_iter9_reg <= icmp_ln67_reg_410_pp0_iter8_reg;
        mul77_1_1_reg_446 <= grp_fu_2022_p_dout0;
        mul77_1_2_reg_461 <= grp_fu_2026_p_dout0;
        mul77_1_3_reg_471 <= grp_fu_2046_p_dout0;
        mul77_1_reg_431 <= grp_fu_2018_p_dout0;
        tmp_7_reg_426 <= tmp_7_fu_264_p6;
        tmp_8_reg_436 <= tmp_8_fu_277_p6;
        tmp_9_reg_451 <= tmp_9_fu_290_p6;
        trunc_ln67_reg_414_pp0_iter10_reg <= trunc_ln67_reg_414_pp0_iter9_reg;
        trunc_ln67_reg_414_pp0_iter11_reg <= trunc_ln67_reg_414_pp0_iter10_reg;
        trunc_ln67_reg_414_pp0_iter12_reg <= trunc_ln67_reg_414_pp0_iter11_reg;
        trunc_ln67_reg_414_pp0_iter13_reg <= trunc_ln67_reg_414_pp0_iter12_reg;
        trunc_ln67_reg_414_pp0_iter14_reg <= trunc_ln67_reg_414_pp0_iter13_reg;
        trunc_ln67_reg_414_pp0_iter15_reg <= trunc_ln67_reg_414_pp0_iter14_reg;
        trunc_ln67_reg_414_pp0_iter16_reg <= trunc_ln67_reg_414_pp0_iter15_reg;
        trunc_ln67_reg_414_pp0_iter17_reg <= trunc_ln67_reg_414_pp0_iter16_reg;
        trunc_ln67_reg_414_pp0_iter18_reg <= trunc_ln67_reg_414_pp0_iter17_reg;
        trunc_ln67_reg_414_pp0_iter19_reg <= trunc_ln67_reg_414_pp0_iter18_reg;
        trunc_ln67_reg_414_pp0_iter20_reg <= trunc_ln67_reg_414_pp0_iter19_reg;
        trunc_ln67_reg_414_pp0_iter21_reg <= trunc_ln67_reg_414_pp0_iter20_reg;
        trunc_ln67_reg_414_pp0_iter22_reg <= trunc_ln67_reg_414_pp0_iter21_reg;
        trunc_ln67_reg_414_pp0_iter23_reg <= trunc_ln67_reg_414_pp0_iter22_reg;
        trunc_ln67_reg_414_pp0_iter24_reg <= trunc_ln67_reg_414_pp0_iter23_reg;
        trunc_ln67_reg_414_pp0_iter25_reg <= trunc_ln67_reg_414_pp0_iter24_reg;
        trunc_ln67_reg_414_pp0_iter26_reg <= trunc_ln67_reg_414_pp0_iter25_reg;
        trunc_ln67_reg_414_pp0_iter27_reg <= trunc_ln67_reg_414_pp0_iter26_reg;
        trunc_ln67_reg_414_pp0_iter28_reg <= trunc_ln67_reg_414_pp0_iter27_reg;
        trunc_ln67_reg_414_pp0_iter29_reg <= trunc_ln67_reg_414_pp0_iter28_reg;
        trunc_ln67_reg_414_pp0_iter2_reg <= trunc_ln67_reg_414_pp0_iter1_reg;
        trunc_ln67_reg_414_pp0_iter30_reg <= trunc_ln67_reg_414_pp0_iter29_reg;
        trunc_ln67_reg_414_pp0_iter31_reg <= trunc_ln67_reg_414_pp0_iter30_reg;
        trunc_ln67_reg_414_pp0_iter32_reg <= trunc_ln67_reg_414_pp0_iter31_reg;
        trunc_ln67_reg_414_pp0_iter33_reg <= trunc_ln67_reg_414_pp0_iter32_reg;
        trunc_ln67_reg_414_pp0_iter34_reg <= trunc_ln67_reg_414_pp0_iter33_reg;
        trunc_ln67_reg_414_pp0_iter35_reg <= trunc_ln67_reg_414_pp0_iter34_reg;
        trunc_ln67_reg_414_pp0_iter36_reg <= trunc_ln67_reg_414_pp0_iter35_reg;
        trunc_ln67_reg_414_pp0_iter37_reg <= trunc_ln67_reg_414_pp0_iter36_reg;
        trunc_ln67_reg_414_pp0_iter38_reg <= trunc_ln67_reg_414_pp0_iter37_reg;
        trunc_ln67_reg_414_pp0_iter39_reg <= trunc_ln67_reg_414_pp0_iter38_reg;
        trunc_ln67_reg_414_pp0_iter3_reg <= trunc_ln67_reg_414_pp0_iter2_reg;
        trunc_ln67_reg_414_pp0_iter40_reg <= trunc_ln67_reg_414_pp0_iter39_reg;
        trunc_ln67_reg_414_pp0_iter41_reg <= trunc_ln67_reg_414_pp0_iter40_reg;
        trunc_ln67_reg_414_pp0_iter42_reg <= trunc_ln67_reg_414_pp0_iter41_reg;
        trunc_ln67_reg_414_pp0_iter43_reg <= trunc_ln67_reg_414_pp0_iter42_reg;
        trunc_ln67_reg_414_pp0_iter44_reg <= trunc_ln67_reg_414_pp0_iter43_reg;
        trunc_ln67_reg_414_pp0_iter45_reg <= trunc_ln67_reg_414_pp0_iter44_reg;
        trunc_ln67_reg_414_pp0_iter46_reg <= trunc_ln67_reg_414_pp0_iter45_reg;
        trunc_ln67_reg_414_pp0_iter47_reg <= trunc_ln67_reg_414_pp0_iter46_reg;
        trunc_ln67_reg_414_pp0_iter48_reg <= trunc_ln67_reg_414_pp0_iter47_reg;
        trunc_ln67_reg_414_pp0_iter49_reg <= trunc_ln67_reg_414_pp0_iter48_reg;
        trunc_ln67_reg_414_pp0_iter4_reg <= trunc_ln67_reg_414_pp0_iter3_reg;
        trunc_ln67_reg_414_pp0_iter50_reg <= trunc_ln67_reg_414_pp0_iter49_reg;
        trunc_ln67_reg_414_pp0_iter51_reg <= trunc_ln67_reg_414_pp0_iter50_reg;
        trunc_ln67_reg_414_pp0_iter52_reg <= trunc_ln67_reg_414_pp0_iter51_reg;
        trunc_ln67_reg_414_pp0_iter53_reg <= trunc_ln67_reg_414_pp0_iter52_reg;
        trunc_ln67_reg_414_pp0_iter54_reg <= trunc_ln67_reg_414_pp0_iter53_reg;
        trunc_ln67_reg_414_pp0_iter55_reg <= trunc_ln67_reg_414_pp0_iter54_reg;
        trunc_ln67_reg_414_pp0_iter56_reg <= trunc_ln67_reg_414_pp0_iter55_reg;
        trunc_ln67_reg_414_pp0_iter57_reg <= trunc_ln67_reg_414_pp0_iter56_reg;
        trunc_ln67_reg_414_pp0_iter58_reg <= trunc_ln67_reg_414_pp0_iter57_reg;
        trunc_ln67_reg_414_pp0_iter59_reg <= trunc_ln67_reg_414_pp0_iter58_reg;
        trunc_ln67_reg_414_pp0_iter5_reg <= trunc_ln67_reg_414_pp0_iter4_reg;
        trunc_ln67_reg_414_pp0_iter60_reg <= trunc_ln67_reg_414_pp0_iter59_reg;
        trunc_ln67_reg_414_pp0_iter61_reg <= trunc_ln67_reg_414_pp0_iter60_reg;
        trunc_ln67_reg_414_pp0_iter62_reg <= trunc_ln67_reg_414_pp0_iter61_reg;
        trunc_ln67_reg_414_pp0_iter63_reg <= trunc_ln67_reg_414_pp0_iter62_reg;
        trunc_ln67_reg_414_pp0_iter64_reg <= trunc_ln67_reg_414_pp0_iter63_reg;
        trunc_ln67_reg_414_pp0_iter65_reg <= trunc_ln67_reg_414_pp0_iter64_reg;
        trunc_ln67_reg_414_pp0_iter66_reg <= trunc_ln67_reg_414_pp0_iter65_reg;
        trunc_ln67_reg_414_pp0_iter67_reg <= trunc_ln67_reg_414_pp0_iter66_reg;
        trunc_ln67_reg_414_pp0_iter6_reg <= trunc_ln67_reg_414_pp0_iter5_reg;
        trunc_ln67_reg_414_pp0_iter7_reg <= trunc_ln67_reg_414_pp0_iter6_reg;
        trunc_ln67_reg_414_pp0_iter8_reg <= trunc_ln67_reg_414_pp0_iter7_reg;
        trunc_ln67_reg_414_pp0_iter9_reg <= trunc_ln67_reg_414_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln67_reg_410 <= icmp_ln67_fu_229_p2;
        icmp_ln67_reg_410_pp0_iter1_reg <= icmp_ln67_reg_410;
        tmp_s_reg_421 <= tmp_s_fu_245_p6;
        trunc_ln67_reg_414 <= trunc_ln67_fu_241_p1;
        trunc_ln67_reg_414_pp0_iter1_reg <= trunc_ln67_reg_414;
    end
end

always @ (*) begin
    if (((trunc_ln67_reg_414_pp0_iter67_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        P_1_0_ap_vld = 1'b1;
    end else begin
        P_1_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln67_reg_414_pp0_iter67_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        P_1_1_ap_vld = 1'b1;
    end else begin
        P_1_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln67_reg_414_pp0_iter67_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        P_1_2_ap_vld = 1'b1;
    end else begin
        P_1_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln67_reg_414_pp0_iter67_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        P_1_3_ap_vld = 1'b1;
    end else begin
        P_1_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln67_fu_229_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter67_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) 
    & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 
    == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_5 = 3'd0;
    end else begin
        ap_sig_allocacmp_j_5 = j_fu_72;
    end
end

always @ (*) begin
    if (((icmp_ln67_reg_410_pp0_iter66_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mux_case_0158394_out_ap_vld = 1'b1;
    end else begin
        mux_case_0158394_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln67_reg_410_pp0_iter66_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mux_case_1159397_out_ap_vld = 1'b1;
    end else begin
        mux_case_1159397_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln67_reg_410_pp0_iter66_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mux_case_2160400_out_ap_vld = 1'b1;
    end else begin
        mux_case_2160400_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln67_reg_410_pp0_iter66_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mux_case_3161403_out_ap_vld = 1'b1;
    end else begin
        mux_case_3161403_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign P_1_0 = add82_1_3_reg_476;

assign P_1_1 = add82_1_3_reg_476;

assign P_1_2 = add82_1_3_reg_476;

assign P_1_3 = add82_1_3_reg_476;

assign add_ln67_fu_235_p2 = (ap_sig_allocacmp_j_5 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_2002_p_ce = 1'b1;

assign grp_fu_2002_p_din0 = mul77_1_reg_431;

assign grp_fu_2002_p_din1 = 64'd0;

assign grp_fu_2002_p_opcode = 2'd0;

assign grp_fu_2006_p_ce = 1'b1;

assign grp_fu_2006_p_din0 = add82_1_reg_441;

assign grp_fu_2006_p_din1 = mul77_1_1_reg_446;

assign grp_fu_2006_p_opcode = 2'd0;

assign grp_fu_2010_p_ce = 1'b1;

assign grp_fu_2010_p_din0 = add82_1_1_reg_456;

assign grp_fu_2010_p_din1 = mul77_1_2_reg_461;

assign grp_fu_2010_p_opcode = 2'd0;

assign grp_fu_2014_p_ce = 1'b1;

assign grp_fu_2014_p_din0 = add82_1_2_reg_466;

assign grp_fu_2014_p_din1 = mul77_1_3_reg_471;

assign grp_fu_2014_p_opcode = 2'd0;

assign grp_fu_2018_p_ce = 1'b1;

assign grp_fu_2018_p_din0 = p_reload51;

assign grp_fu_2018_p_din1 = tmp_s_reg_421;

assign grp_fu_2022_p_ce = 1'b1;

assign grp_fu_2022_p_din0 = p_reload50;

assign grp_fu_2022_p_din1 = tmp_7_reg_426;

assign grp_fu_2026_p_ce = 1'b1;

assign grp_fu_2026_p_din0 = p_reload49;

assign grp_fu_2026_p_din1 = tmp_8_reg_436;

assign grp_fu_2046_p_ce = 1'b1;

assign grp_fu_2046_p_din0 = p_reload48;

assign grp_fu_2046_p_din1 = tmp_9_reg_451;

assign icmp_ln67_fu_229_p2 = ((ap_sig_allocacmp_j_5 == 3'd4) ? 1'b1 : 1'b0);

assign mux_case_0158394_out = mux_case_0158394_fu_76;

assign mux_case_1159397_out = mux_case_1159397_fu_80;

assign mux_case_2160400_out = mux_case_2160400_fu_84;

assign mux_case_3161403_out = mux_case_3161403_fu_88;

assign tmp_s_fu_245_p5 = ap_sig_allocacmp_j_5[1:0];

assign trunc_ln67_fu_241_p1 = ap_sig_allocacmp_j_5[1:0];

endmodule //extendedKalmanFilter_extendedKalmanFilter_Pipeline_VITIS_LOOP_67_74
