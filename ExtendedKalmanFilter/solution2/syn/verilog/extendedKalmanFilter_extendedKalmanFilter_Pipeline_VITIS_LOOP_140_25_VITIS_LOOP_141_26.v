// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module extendedKalmanFilter_extendedKalmanFilter_Pipeline_VITIS_LOOP_140_25_VITIS_LOOP_141_26 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp2_address0,
        temp2_ce0,
        temp2_we0,
        temp2_d0,
        mux_case_0243446_reload,
        mux_case_1245449_reload,
        mux_case_2247452_reload,
        mux_case_3249455_reload,
        mux_case_0251458_reload,
        mux_case_1253461_reload,
        mux_case_2255464_reload,
        mux_case_3257467_reload,
        grp_fu_2006_p_din0,
        grp_fu_2006_p_din1,
        grp_fu_2006_p_opcode,
        grp_fu_2006_p_dout0,
        grp_fu_2006_p_ce,
        grp_fu_2010_p_din0,
        grp_fu_2010_p_din1,
        grp_fu_2010_p_opcode,
        grp_fu_2010_p_dout0,
        grp_fu_2010_p_ce,
        grp_fu_2022_p_din0,
        grp_fu_2022_p_din1,
        grp_fu_2022_p_dout0,
        grp_fu_2022_p_ce,
        grp_fu_2026_p_din0,
        grp_fu_2026_p_din1,
        grp_fu_2026_p_dout0,
        grp_fu_2026_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] temp2_address0;
output   temp2_ce0;
output   temp2_we0;
output  [63:0] temp2_d0;
input  [63:0] mux_case_0243446_reload;
input  [63:0] mux_case_1245449_reload;
input  [63:0] mux_case_2247452_reload;
input  [63:0] mux_case_3249455_reload;
input  [63:0] mux_case_0251458_reload;
input  [63:0] mux_case_1253461_reload;
input  [63:0] mux_case_2255464_reload;
input  [63:0] mux_case_3257467_reload;
output  [63:0] grp_fu_2006_p_din0;
output  [63:0] grp_fu_2006_p_din1;
output  [1:0] grp_fu_2006_p_opcode;
input  [63:0] grp_fu_2006_p_dout0;
output   grp_fu_2006_p_ce;
output  [63:0] grp_fu_2010_p_din0;
output  [63:0] grp_fu_2010_p_din1;
output  [1:0] grp_fu_2010_p_opcode;
input  [63:0] grp_fu_2010_p_dout0;
output   grp_fu_2010_p_ce;
output  [63:0] grp_fu_2022_p_din0;
output  [63:0] grp_fu_2022_p_din1;
input  [63:0] grp_fu_2022_p_dout0;
output   grp_fu_2022_p_ce;
output  [63:0] grp_fu_2026_p_din0;
output  [63:0] grp_fu_2026_p_din1;
input  [63:0] grp_fu_2026_p_dout0;
output   grp_fu_2026_p_ce;

reg ap_idle;
reg temp2_ce0;
reg temp2_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln140_fu_178_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] select_ln140_fu_208_p3;
reg   [2:0] select_ln140_reg_407;
reg   [2:0] select_ln140_reg_407_pp0_iter1_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter2_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter3_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter4_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter5_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter6_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter7_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter8_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter9_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter10_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter11_reg;
reg   [2:0] select_ln140_reg_407_pp0_iter12_reg;
wire   [1:0] trunc_ln142_fu_224_p1;
reg   [1:0] trunc_ln142_reg_412;
reg   [1:0] trunc_ln142_reg_412_pp0_iter1_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter2_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter3_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter4_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter5_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter6_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter7_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter8_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter9_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter10_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter11_reg;
reg   [1:0] trunc_ln142_reg_412_pp0_iter12_reg;
wire   [1:0] trunc_ln141_fu_228_p1;
reg   [1:0] trunc_ln141_reg_418;
reg   [1:0] trunc_ln141_reg_418_pp0_iter1_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter2_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter3_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter4_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter5_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter6_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter7_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter8_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter9_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter10_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter11_reg;
reg   [1:0] trunc_ln141_reg_418_pp0_iter12_reg;
wire   [63:0] tmp_19_fu_232_p11;
reg   [63:0] tmp_19_reg_423;
wire   [63:0] tmp_20_fu_256_p11;
reg   [63:0] tmp_20_reg_428;
wire   [2:0] add_ln141_fu_280_p2;
reg   [2:0] add_ln141_reg_433;
wire   [3:0] add_ln142_fu_310_p2;
reg   [3:0] add_ln142_reg_438;
reg   [3:0] add_ln142_reg_438_pp0_iter14_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter15_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter16_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter17_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter18_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter19_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter20_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter21_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter22_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter23_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter24_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter25_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter26_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter27_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter28_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter29_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter30_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter31_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter32_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter33_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter34_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter35_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter36_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter37_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter38_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter39_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter40_reg;
reg   [3:0] add_ln142_reg_438_pp0_iter41_reg;
wire   [63:0] tmp_21_fu_316_p11;
reg   [63:0] tmp_21_reg_443;
wire   [63:0] tmp_22_fu_335_p11;
reg   [63:0] tmp_22_reg_448;
reg   [63:0] mul5_reg_453;
reg   [63:0] add7_reg_458;
reg   [63:0] mul352_1_reg_463;
reg   [63:0] add357_1_reg_468;
wire   [63:0] zext_ln142_1_fu_358_p1;
wire    ap_block_pp0_stage0;
reg   [2:0] j_fu_70;
reg   [2:0] ap_sig_allocacmp_j_load;
wire    ap_loop_init;
reg   [2:0] i_fu_74;
wire   [2:0] select_ln140_1_fu_216_p3;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [4:0] indvar_flatten_fu_78;
wire   [4:0] add_ln140_1_fu_184_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [0:0] icmp_ln141_fu_202_p2;
wire   [2:0] add_ln140_fu_196_p2;
wire   [63:0] tmp_19_fu_232_p9;
wire   [1:0] tmp_19_fu_232_p10;
wire   [63:0] tmp_20_fu_256_p9;
wire   [1:0] tmp_20_fu_256_p10;
wire   [3:0] tmp_s_fu_300_p3;
wire   [3:0] zext_ln142_fu_307_p1;
wire   [63:0] tmp_21_fu_316_p9;
wire   [63:0] tmp_22_fu_335_p9;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire   [1:0] tmp_19_fu_232_p1;
wire   [1:0] tmp_19_fu_232_p3;
wire  signed [1:0] tmp_19_fu_232_p5;
wire  signed [1:0] tmp_19_fu_232_p7;
wire   [1:0] tmp_20_fu_256_p1;
wire   [1:0] tmp_20_fu_256_p3;
wire  signed [1:0] tmp_20_fu_256_p5;
wire  signed [1:0] tmp_20_fu_256_p7;
wire   [1:0] tmp_21_fu_316_p1;
wire   [1:0] tmp_21_fu_316_p3;
wire  signed [1:0] tmp_21_fu_316_p5;
wire  signed [1:0] tmp_21_fu_316_p7;
wire   [1:0] tmp_22_fu_335_p1;
wire   [1:0] tmp_22_fu_335_p3;
wire  signed [1:0] tmp_22_fu_335_p5;
wire  signed [1:0] tmp_22_fu_335_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 j_fu_70 = 3'd0;
#0 i_fu_74 = 3'd0;
#0 indvar_flatten_fu_78 = 5'd0;
#0 ap_done_reg = 1'b0;
end

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U437(
    .din0(mux_case_0243446_reload),
    .din1(mux_case_1245449_reload),
    .din2(mux_case_2247452_reload),
    .din3(mux_case_3249455_reload),
    .def(tmp_19_fu_232_p9),
    .sel(tmp_19_fu_232_p10),
    .dout(tmp_19_fu_232_p11)
);

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U438(
    .din0(64'd4607182418800017408),
    .din1(64'd0),
    .din2(64'd0),
    .din3(64'd0),
    .def(tmp_20_fu_256_p9),
    .sel(tmp_20_fu_256_p10),
    .dout(tmp_20_fu_256_p11)
);

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U439(
    .din0(mux_case_0251458_reload),
    .din1(mux_case_1253461_reload),
    .din2(mux_case_2255464_reload),
    .din3(mux_case_3257467_reload),
    .def(tmp_21_fu_316_p9),
    .sel(trunc_ln142_reg_412_pp0_iter12_reg),
    .dout(tmp_21_fu_316_p11)
);

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U440(
    .din0(64'd0),
    .din1(64'd4607182418800017408),
    .din2(64'd0),
    .din3(64'd0),
    .def(tmp_22_fu_335_p9),
    .sel(trunc_ln141_reg_418_pp0_iter12_reg),
    .dout(tmp_22_fu_335_p11)
);

extendedKalmanFilter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter41_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln140_fu_178_p2 == 1'd0))) begin
            i_fu_74 <= select_ln140_1_fu_216_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_74 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln140_fu_178_p2 == 1'd0))) begin
            indvar_flatten_fu_78 <= add_ln140_1_fu_184_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_78 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_70 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            j_fu_70 <= add_ln141_reg_433;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add357_1_reg_468 <= grp_fu_2010_p_dout0;
        add7_reg_458 <= grp_fu_2006_p_dout0;
        add_ln142_reg_438 <= add_ln142_fu_310_p2;
        add_ln142_reg_438_pp0_iter14_reg <= add_ln142_reg_438;
        add_ln142_reg_438_pp0_iter15_reg <= add_ln142_reg_438_pp0_iter14_reg;
        add_ln142_reg_438_pp0_iter16_reg <= add_ln142_reg_438_pp0_iter15_reg;
        add_ln142_reg_438_pp0_iter17_reg <= add_ln142_reg_438_pp0_iter16_reg;
        add_ln142_reg_438_pp0_iter18_reg <= add_ln142_reg_438_pp0_iter17_reg;
        add_ln142_reg_438_pp0_iter19_reg <= add_ln142_reg_438_pp0_iter18_reg;
        add_ln142_reg_438_pp0_iter20_reg <= add_ln142_reg_438_pp0_iter19_reg;
        add_ln142_reg_438_pp0_iter21_reg <= add_ln142_reg_438_pp0_iter20_reg;
        add_ln142_reg_438_pp0_iter22_reg <= add_ln142_reg_438_pp0_iter21_reg;
        add_ln142_reg_438_pp0_iter23_reg <= add_ln142_reg_438_pp0_iter22_reg;
        add_ln142_reg_438_pp0_iter24_reg <= add_ln142_reg_438_pp0_iter23_reg;
        add_ln142_reg_438_pp0_iter25_reg <= add_ln142_reg_438_pp0_iter24_reg;
        add_ln142_reg_438_pp0_iter26_reg <= add_ln142_reg_438_pp0_iter25_reg;
        add_ln142_reg_438_pp0_iter27_reg <= add_ln142_reg_438_pp0_iter26_reg;
        add_ln142_reg_438_pp0_iter28_reg <= add_ln142_reg_438_pp0_iter27_reg;
        add_ln142_reg_438_pp0_iter29_reg <= add_ln142_reg_438_pp0_iter28_reg;
        add_ln142_reg_438_pp0_iter30_reg <= add_ln142_reg_438_pp0_iter29_reg;
        add_ln142_reg_438_pp0_iter31_reg <= add_ln142_reg_438_pp0_iter30_reg;
        add_ln142_reg_438_pp0_iter32_reg <= add_ln142_reg_438_pp0_iter31_reg;
        add_ln142_reg_438_pp0_iter33_reg <= add_ln142_reg_438_pp0_iter32_reg;
        add_ln142_reg_438_pp0_iter34_reg <= add_ln142_reg_438_pp0_iter33_reg;
        add_ln142_reg_438_pp0_iter35_reg <= add_ln142_reg_438_pp0_iter34_reg;
        add_ln142_reg_438_pp0_iter36_reg <= add_ln142_reg_438_pp0_iter35_reg;
        add_ln142_reg_438_pp0_iter37_reg <= add_ln142_reg_438_pp0_iter36_reg;
        add_ln142_reg_438_pp0_iter38_reg <= add_ln142_reg_438_pp0_iter37_reg;
        add_ln142_reg_438_pp0_iter39_reg <= add_ln142_reg_438_pp0_iter38_reg;
        add_ln142_reg_438_pp0_iter40_reg <= add_ln142_reg_438_pp0_iter39_reg;
        add_ln142_reg_438_pp0_iter41_reg <= add_ln142_reg_438_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        mul352_1_reg_463 <= grp_fu_2026_p_dout0;
        mul5_reg_453 <= grp_fu_2022_p_dout0;
        select_ln140_reg_407_pp0_iter10_reg <= select_ln140_reg_407_pp0_iter9_reg;
        select_ln140_reg_407_pp0_iter11_reg <= select_ln140_reg_407_pp0_iter10_reg;
        select_ln140_reg_407_pp0_iter12_reg <= select_ln140_reg_407_pp0_iter11_reg;
        select_ln140_reg_407_pp0_iter2_reg <= select_ln140_reg_407_pp0_iter1_reg;
        select_ln140_reg_407_pp0_iter3_reg <= select_ln140_reg_407_pp0_iter2_reg;
        select_ln140_reg_407_pp0_iter4_reg <= select_ln140_reg_407_pp0_iter3_reg;
        select_ln140_reg_407_pp0_iter5_reg <= select_ln140_reg_407_pp0_iter4_reg;
        select_ln140_reg_407_pp0_iter6_reg <= select_ln140_reg_407_pp0_iter5_reg;
        select_ln140_reg_407_pp0_iter7_reg <= select_ln140_reg_407_pp0_iter6_reg;
        select_ln140_reg_407_pp0_iter8_reg <= select_ln140_reg_407_pp0_iter7_reg;
        select_ln140_reg_407_pp0_iter9_reg <= select_ln140_reg_407_pp0_iter8_reg;
        tmp_21_reg_443 <= tmp_21_fu_316_p11;
        tmp_22_reg_448 <= tmp_22_fu_335_p11;
        trunc_ln141_reg_418_pp0_iter10_reg <= trunc_ln141_reg_418_pp0_iter9_reg;
        trunc_ln141_reg_418_pp0_iter11_reg <= trunc_ln141_reg_418_pp0_iter10_reg;
        trunc_ln141_reg_418_pp0_iter12_reg <= trunc_ln141_reg_418_pp0_iter11_reg;
        trunc_ln141_reg_418_pp0_iter2_reg <= trunc_ln141_reg_418_pp0_iter1_reg;
        trunc_ln141_reg_418_pp0_iter3_reg <= trunc_ln141_reg_418_pp0_iter2_reg;
        trunc_ln141_reg_418_pp0_iter4_reg <= trunc_ln141_reg_418_pp0_iter3_reg;
        trunc_ln141_reg_418_pp0_iter5_reg <= trunc_ln141_reg_418_pp0_iter4_reg;
        trunc_ln141_reg_418_pp0_iter6_reg <= trunc_ln141_reg_418_pp0_iter5_reg;
        trunc_ln141_reg_418_pp0_iter7_reg <= trunc_ln141_reg_418_pp0_iter6_reg;
        trunc_ln141_reg_418_pp0_iter8_reg <= trunc_ln141_reg_418_pp0_iter7_reg;
        trunc_ln141_reg_418_pp0_iter9_reg <= trunc_ln141_reg_418_pp0_iter8_reg;
        trunc_ln142_reg_412_pp0_iter10_reg <= trunc_ln142_reg_412_pp0_iter9_reg;
        trunc_ln142_reg_412_pp0_iter11_reg <= trunc_ln142_reg_412_pp0_iter10_reg;
        trunc_ln142_reg_412_pp0_iter12_reg <= trunc_ln142_reg_412_pp0_iter11_reg;
        trunc_ln142_reg_412_pp0_iter2_reg <= trunc_ln142_reg_412_pp0_iter1_reg;
        trunc_ln142_reg_412_pp0_iter3_reg <= trunc_ln142_reg_412_pp0_iter2_reg;
        trunc_ln142_reg_412_pp0_iter4_reg <= trunc_ln142_reg_412_pp0_iter3_reg;
        trunc_ln142_reg_412_pp0_iter5_reg <= trunc_ln142_reg_412_pp0_iter4_reg;
        trunc_ln142_reg_412_pp0_iter6_reg <= trunc_ln142_reg_412_pp0_iter5_reg;
        trunc_ln142_reg_412_pp0_iter7_reg <= trunc_ln142_reg_412_pp0_iter6_reg;
        trunc_ln142_reg_412_pp0_iter8_reg <= trunc_ln142_reg_412_pp0_iter7_reg;
        trunc_ln142_reg_412_pp0_iter9_reg <= trunc_ln142_reg_412_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln141_reg_433 <= add_ln141_fu_280_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln140_reg_407 <= select_ln140_fu_208_p3;
        select_ln140_reg_407_pp0_iter1_reg <= select_ln140_reg_407;
        tmp_19_reg_423 <= tmp_19_fu_232_p11;
        tmp_20_reg_428 <= tmp_20_fu_256_p11;
        trunc_ln141_reg_418 <= trunc_ln141_fu_228_p1;
        trunc_ln141_reg_418_pp0_iter1_reg <= trunc_ln141_reg_418;
        trunc_ln142_reg_412 <= trunc_ln142_fu_224_p1;
        trunc_ln142_reg_412_pp0_iter1_reg <= trunc_ln142_reg_412;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln140_fu_178_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter41_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) 
    & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_74;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_78;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_j_load = 3'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_j_load = add_ln141_reg_433;
        end else begin
            ap_sig_allocacmp_j_load = j_fu_70;
        end
    end else begin
        ap_sig_allocacmp_j_load = j_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        temp2_ce0 = 1'b1;
    end else begin
        temp2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        temp2_we0 = 1'b1;
    end else begin
        temp2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln140_1_fu_184_p2 = (ap_sig_allocacmp_indvar_flatten_load + 5'd1);

assign add_ln140_fu_196_p2 = (ap_sig_allocacmp_i_load + 3'd1);

assign add_ln141_fu_280_p2 = (select_ln140_fu_208_p3 + 3'd1);

assign add_ln142_fu_310_p2 = (tmp_s_fu_300_p3 + zext_ln142_fu_307_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_2006_p_ce = 1'b1;

assign grp_fu_2006_p_din0 = mul5_reg_453;

assign grp_fu_2006_p_din1 = 64'd0;

assign grp_fu_2006_p_opcode = 2'd0;

assign grp_fu_2010_p_ce = 1'b1;

assign grp_fu_2010_p_din0 = add7_reg_458;

assign grp_fu_2010_p_din1 = mul352_1_reg_463;

assign grp_fu_2010_p_opcode = 2'd0;

assign grp_fu_2022_p_ce = 1'b1;

assign grp_fu_2022_p_din0 = tmp_19_reg_423;

assign grp_fu_2022_p_din1 = tmp_20_reg_428;

assign grp_fu_2026_p_ce = 1'b1;

assign grp_fu_2026_p_din0 = tmp_21_reg_443;

assign grp_fu_2026_p_din1 = tmp_22_reg_448;

assign icmp_ln140_fu_178_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_202_p2 = ((ap_sig_allocacmp_j_load == 3'd4) ? 1'b1 : 1'b0);

assign select_ln140_1_fu_216_p3 = ((icmp_ln141_fu_202_p2[0:0] == 1'b1) ? add_ln140_fu_196_p2 : ap_sig_allocacmp_i_load);

assign select_ln140_fu_208_p3 = ((icmp_ln141_fu_202_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_j_load);

assign temp2_address0 = zext_ln142_1_fu_358_p1;

assign temp2_d0 = add357_1_reg_468;

assign tmp_19_fu_232_p10 = select_ln140_1_fu_216_p3[1:0];

assign tmp_19_fu_232_p9 = 'bx;

assign tmp_20_fu_256_p10 = select_ln140_fu_208_p3[1:0];

assign tmp_20_fu_256_p9 = 'bx;

assign tmp_21_fu_316_p9 = 'bx;

assign tmp_22_fu_335_p9 = 'bx;

assign tmp_s_fu_300_p3 = {{trunc_ln142_reg_412_pp0_iter12_reg}, {2'd0}};

assign trunc_ln141_fu_228_p1 = select_ln140_fu_208_p3[1:0];

assign trunc_ln142_fu_224_p1 = select_ln140_1_fu_216_p3[1:0];

assign zext_ln142_1_fu_358_p1 = add_ln142_reg_438_pp0_iter41_reg;

assign zext_ln142_fu_307_p1 = select_ln140_reg_407_pp0_iter12_reg;

endmodule //extendedKalmanFilter_extendedKalmanFilter_Pipeline_VITIS_LOOP_140_25_VITIS_LOOP_141_26
