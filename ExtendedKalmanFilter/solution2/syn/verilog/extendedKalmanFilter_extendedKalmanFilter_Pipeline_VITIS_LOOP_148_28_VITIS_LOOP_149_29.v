// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module extendedKalmanFilter_extendedKalmanFilter_Pipeline_VITIS_LOOP_148_28_VITIS_LOOP_149_29 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mux_case_3169427_reload,
        mux_case_2168424_reload,
        mux_case_1167421_reload,
        mux_case_0166418_reload,
        mux_case_3165415_reload,
        mux_case_2164412_reload,
        mux_case_1163409_reload,
        mux_case_0162406_reload,
        mux_case_3161403_reload,
        mux_case_2160400_reload,
        mux_case_1159397_reload,
        mux_case_0158394_reload,
        mux_case_3157391_reload,
        mux_case_2156388_reload,
        mux_case_1155385_reload,
        mux_case_0154382_reload,
        temp2_address0,
        temp2_ce0,
        temp2_q0,
        P_0_0,
        P_0_0_ap_vld,
        P_0_1,
        P_0_1_ap_vld,
        P_0_2,
        P_0_2_ap_vld,
        P_0_3,
        P_0_3_ap_vld,
        P_1_0,
        P_1_0_ap_vld,
        P_1_1,
        P_1_1_ap_vld,
        P_1_2,
        P_1_2_ap_vld,
        P_1_3,
        P_1_3_ap_vld,
        P_2_0,
        P_2_0_ap_vld,
        P_2_1,
        P_2_1_ap_vld,
        P_2_2,
        P_2_2_ap_vld,
        P_2_3,
        P_2_3_ap_vld,
        P_3_0,
        P_3_0_ap_vld,
        P_3_1,
        P_3_1_ap_vld,
        P_3_2,
        P_3_2_ap_vld,
        P_3_3,
        P_3_3_ap_vld,
        grp_fu_2002_p_din0,
        grp_fu_2002_p_din1,
        grp_fu_2002_p_opcode,
        grp_fu_2002_p_dout0,
        grp_fu_2002_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 14'd1;
parameter    ap_ST_fsm_pp0_stage1 = 14'd2;
parameter    ap_ST_fsm_pp0_stage2 = 14'd4;
parameter    ap_ST_fsm_pp0_stage3 = 14'd8;
parameter    ap_ST_fsm_pp0_stage4 = 14'd16;
parameter    ap_ST_fsm_pp0_stage5 = 14'd32;
parameter    ap_ST_fsm_pp0_stage6 = 14'd64;
parameter    ap_ST_fsm_pp0_stage7 = 14'd128;
parameter    ap_ST_fsm_pp0_stage8 = 14'd256;
parameter    ap_ST_fsm_pp0_stage9 = 14'd512;
parameter    ap_ST_fsm_pp0_stage10 = 14'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 14'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 14'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] mux_case_3169427_reload;
input  [63:0] mux_case_2168424_reload;
input  [63:0] mux_case_1167421_reload;
input  [63:0] mux_case_0166418_reload;
input  [63:0] mux_case_3165415_reload;
input  [63:0] mux_case_2164412_reload;
input  [63:0] mux_case_1163409_reload;
input  [63:0] mux_case_0162406_reload;
input  [63:0] mux_case_3161403_reload;
input  [63:0] mux_case_2160400_reload;
input  [63:0] mux_case_1159397_reload;
input  [63:0] mux_case_0158394_reload;
input  [63:0] mux_case_3157391_reload;
input  [63:0] mux_case_2156388_reload;
input  [63:0] mux_case_1155385_reload;
input  [63:0] mux_case_0154382_reload;
output  [3:0] temp2_address0;
output   temp2_ce0;
input  [63:0] temp2_q0;
output  [63:0] P_0_0;
output   P_0_0_ap_vld;
output  [63:0] P_0_1;
output   P_0_1_ap_vld;
output  [63:0] P_0_2;
output   P_0_2_ap_vld;
output  [63:0] P_0_3;
output   P_0_3_ap_vld;
output  [63:0] P_1_0;
output   P_1_0_ap_vld;
output  [63:0] P_1_1;
output   P_1_1_ap_vld;
output  [63:0] P_1_2;
output   P_1_2_ap_vld;
output  [63:0] P_1_3;
output   P_1_3_ap_vld;
output  [63:0] P_2_0;
output   P_2_0_ap_vld;
output  [63:0] P_2_1;
output   P_2_1_ap_vld;
output  [63:0] P_2_2;
output   P_2_2_ap_vld;
output  [63:0] P_2_3;
output   P_2_3_ap_vld;
output  [63:0] P_3_0;
output   P_3_0_ap_vld;
output  [63:0] P_3_1;
output   P_3_1_ap_vld;
output  [63:0] P_3_2;
output   P_3_2_ap_vld;
output  [63:0] P_3_3;
output   P_3_3_ap_vld;
output  [63:0] grp_fu_2002_p_din0;
output  [63:0] grp_fu_2002_p_din1;
output  [0:0] grp_fu_2002_p_opcode;
input  [63:0] grp_fu_2002_p_dout0;
output   grp_fu_2002_p_ce;

reg ap_idle;
reg temp2_ce0;
reg P_0_0_ap_vld;
reg P_0_1_ap_vld;
reg P_0_2_ap_vld;
reg P_0_3_ap_vld;
reg P_1_0_ap_vld;
reg P_1_1_ap_vld;
reg P_1_2_ap_vld;
reg P_1_3_ap_vld;
reg P_2_0_ap_vld;
reg P_2_1_ap_vld;
reg P_2_2_ap_vld;
reg P_2_3_ap_vld;
reg P_3_0_ap_vld;
reg P_3_1_ap_vld;
reg P_3_2_ap_vld;
reg P_3_3_ap_vld;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln148_reg_951;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln148_fu_401_p2;
wire   [4:0] add_ln148_1_fu_407_p2;
reg   [4:0] add_ln148_1_reg_955;
wire   [2:0] select_ln148_fu_431_p3;
reg   [2:0] select_ln148_reg_960;
wire   [2:0] select_ln148_1_fu_439_p3;
reg   [2:0] select_ln148_1_reg_965;
wire   [1:0] trunc_ln150_fu_447_p1;
reg   [1:0] trunc_ln150_reg_970;
reg   [1:0] trunc_ln150_reg_970_pp0_iter1_reg;
wire   [3:0] add_ln150_fu_463_p2;
reg   [3:0] add_ln150_reg_975;
wire   [1:0] trunc_ln149_fu_469_p1;
reg   [1:0] trunc_ln149_reg_980;
reg   [1:0] trunc_ln149_reg_980_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] tmp_18_fu_625_p11;
reg   [63:0] tmp_18_reg_993;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] temp2_load_reg_998;
reg   [63:0] sub_reg_1003;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln150_1_fu_473_p1;
wire    ap_block_pp0_stage1;
reg   [2:0] j_fu_114;
wire   [2:0] add_ln149_fu_648_p2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_j_load;
wire    ap_block_pp0_stage0;
reg   [2:0] i_fu_118;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [4:0] indvar_flatten6_fu_122;
reg   [4:0] ap_sig_allocacmp_indvar_flatten6_load;
reg   [63:0] mux_case_0290_fu_126;
reg   [63:0] ap_sig_allocacmp_mux_case_0290_load;
wire    ap_block_pp0_stage2;
reg   [63:0] mux_case_1291_fu_130;
reg   [63:0] ap_sig_allocacmp_mux_case_1291_load;
reg   [63:0] mux_case_2292_fu_134;
reg   [63:0] ap_sig_allocacmp_mux_case_2292_load;
reg   [63:0] mux_case_3293_fu_138;
reg   [63:0] ap_sig_allocacmp_mux_case_3293_load;
reg   [63:0] mux_case_0295_fu_142;
reg   [63:0] ap_sig_allocacmp_mux_case_0295_load;
reg   [63:0] mux_case_1296_fu_146;
reg   [63:0] ap_sig_allocacmp_mux_case_1296_load;
reg   [63:0] mux_case_2297_fu_150;
reg   [63:0] ap_sig_allocacmp_mux_case_2297_load;
reg   [63:0] mux_case_3298_fu_154;
reg   [63:0] ap_sig_allocacmp_mux_case_3298_load;
reg   [63:0] mux_case_0300_fu_158;
reg   [63:0] ap_sig_allocacmp_mux_case_0300_load;
reg   [63:0] mux_case_1301_fu_162;
reg   [63:0] ap_sig_allocacmp_mux_case_1301_load;
reg   [63:0] mux_case_2302_fu_166;
reg   [63:0] ap_sig_allocacmp_mux_case_2302_load;
reg   [63:0] mux_case_3303_fu_170;
reg   [63:0] ap_sig_allocacmp_mux_case_3303_load;
reg   [63:0] mux_case_0305_fu_174;
reg   [63:0] ap_sig_allocacmp_mux_case_0305_load;
reg   [63:0] mux_case_1306_fu_178;
reg   [63:0] ap_sig_allocacmp_mux_case_1306_load;
reg   [63:0] mux_case_2307_fu_182;
reg   [63:0] ap_sig_allocacmp_mux_case_2307_load;
reg   [63:0] mux_case_3308_fu_186;
reg   [63:0] ap_sig_allocacmp_mux_case_3308_load;
wire    ap_block_pp0_stage3;
wire   [0:0] icmp_ln149_fu_425_p2;
wire   [2:0] add_ln148_fu_419_p2;
wire   [3:0] tmp_s_fu_451_p3;
wire   [3:0] zext_ln150_fu_459_p1;
wire   [63:0] tmp_14_fu_533_p9;
wire   [63:0] tmp_15_fu_556_p9;
wire   [63:0] tmp_16_fu_579_p9;
wire   [63:0] tmp_17_fu_602_p9;
wire   [63:0] tmp_14_fu_533_p11;
wire   [63:0] tmp_15_fu_556_p11;
wire   [63:0] tmp_16_fu_579_p11;
wire   [63:0] tmp_17_fu_602_p11;
wire   [63:0] tmp_18_fu_625_p9;
wire    ap_block_pp0_stage3_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [1:0] tmp_14_fu_533_p1;
wire   [1:0] tmp_14_fu_533_p3;
wire  signed [1:0] tmp_14_fu_533_p5;
wire  signed [1:0] tmp_14_fu_533_p7;
wire   [1:0] tmp_15_fu_556_p1;
wire   [1:0] tmp_15_fu_556_p3;
wire  signed [1:0] tmp_15_fu_556_p5;
wire  signed [1:0] tmp_15_fu_556_p7;
wire   [1:0] tmp_16_fu_579_p1;
wire   [1:0] tmp_16_fu_579_p3;
wire  signed [1:0] tmp_16_fu_579_p5;
wire  signed [1:0] tmp_16_fu_579_p7;
wire   [1:0] tmp_17_fu_602_p1;
wire   [1:0] tmp_17_fu_602_p3;
wire  signed [1:0] tmp_17_fu_602_p5;
wire  signed [1:0] tmp_17_fu_602_p7;
wire   [1:0] tmp_18_fu_625_p1;
wire   [1:0] tmp_18_fu_625_p3;
wire  signed [1:0] tmp_18_fu_625_p5;
wire  signed [1:0] tmp_18_fu_625_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 j_fu_114 = 3'd0;
#0 i_fu_118 = 3'd0;
#0 indvar_flatten6_fu_122 = 5'd0;
#0 mux_case_0290_fu_126 = 64'd0;
#0 mux_case_1291_fu_130 = 64'd0;
#0 mux_case_2292_fu_134 = 64'd0;
#0 mux_case_3293_fu_138 = 64'd0;
#0 mux_case_0295_fu_142 = 64'd0;
#0 mux_case_1296_fu_146 = 64'd0;
#0 mux_case_2297_fu_150 = 64'd0;
#0 mux_case_3298_fu_154 = 64'd0;
#0 mux_case_0300_fu_158 = 64'd0;
#0 mux_case_1301_fu_162 = 64'd0;
#0 mux_case_2302_fu_166 = 64'd0;
#0 mux_case_3303_fu_170 = 64'd0;
#0 mux_case_0305_fu_174 = 64'd0;
#0 mux_case_1306_fu_178 = 64'd0;
#0 mux_case_2307_fu_182 = 64'd0;
#0 mux_case_3308_fu_186 = 64'd0;
#0 ap_done_reg = 1'b0;
end

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U451(
    .din0(ap_sig_allocacmp_mux_case_0290_load),
    .din1(ap_sig_allocacmp_mux_case_1291_load),
    .din2(ap_sig_allocacmp_mux_case_2292_load),
    .din3(ap_sig_allocacmp_mux_case_3293_load),
    .def(tmp_14_fu_533_p9),
    .sel(trunc_ln149_reg_980),
    .dout(tmp_14_fu_533_p11)
);

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U452(
    .din0(ap_sig_allocacmp_mux_case_0295_load),
    .din1(ap_sig_allocacmp_mux_case_1296_load),
    .din2(ap_sig_allocacmp_mux_case_2297_load),
    .din3(ap_sig_allocacmp_mux_case_3298_load),
    .def(tmp_15_fu_556_p9),
    .sel(trunc_ln149_reg_980),
    .dout(tmp_15_fu_556_p11)
);

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U453(
    .din0(ap_sig_allocacmp_mux_case_0300_load),
    .din1(ap_sig_allocacmp_mux_case_1301_load),
    .din2(ap_sig_allocacmp_mux_case_2302_load),
    .din3(ap_sig_allocacmp_mux_case_3303_load),
    .def(tmp_16_fu_579_p9),
    .sel(trunc_ln149_reg_980),
    .dout(tmp_16_fu_579_p11)
);

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U454(
    .din0(ap_sig_allocacmp_mux_case_0305_load),
    .din1(ap_sig_allocacmp_mux_case_1306_load),
    .din2(ap_sig_allocacmp_mux_case_2307_load),
    .din3(ap_sig_allocacmp_mux_case_3308_load),
    .def(tmp_17_fu_602_p9),
    .sel(trunc_ln149_reg_980),
    .dout(tmp_17_fu_602_p11)
);

extendedKalmanFilter_sparsemux_9_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_9_2_64_1_1_U455(
    .din0(tmp_14_fu_533_p11),
    .din1(tmp_15_fu_556_p11),
    .din2(tmp_16_fu_579_p11),
    .din3(tmp_17_fu_602_p11),
    .def(tmp_18_fu_625_p9),
    .sel(trunc_ln150_reg_970),
    .dout(tmp_18_fu_625_p11)
);

extendedKalmanFilter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_118 <= 3'd0;
    end else if (((icmp_ln148_reg_951 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_118 <= select_ln148_1_reg_965;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten6_fu_122 <= 5'd0;
    end else if (((icmp_ln148_reg_951 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten6_fu_122 <= add_ln148_1_reg_955;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_114 <= 3'd0;
    end else if (((icmp_ln148_reg_951 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        j_fu_114 <= add_ln149_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_0290_fu_126 <= mux_case_0154382_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        mux_case_0290_fu_126 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_0295_fu_142 <= mux_case_0158394_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        mux_case_0295_fu_142 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_0300_fu_158 <= mux_case_0162406_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        mux_case_0300_fu_158 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_0305_fu_174 <= mux_case_0166418_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        mux_case_0305_fu_174 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1291_fu_130 <= mux_case_1155385_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        mux_case_1291_fu_130 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1296_fu_146 <= mux_case_1159397_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        mux_case_1296_fu_146 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1301_fu_162 <= mux_case_1163409_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        mux_case_1301_fu_162 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1306_fu_178 <= mux_case_1167421_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        mux_case_1306_fu_178 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2292_fu_134 <= mux_case_2156388_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        mux_case_2292_fu_134 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2297_fu_150 <= mux_case_2160400_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        mux_case_2297_fu_150 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2302_fu_166 <= mux_case_2164412_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        mux_case_2302_fu_166 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2307_fu_182 <= mux_case_2168424_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        mux_case_2307_fu_182 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_3293_fu_138 <= mux_case_3157391_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        mux_case_3293_fu_138 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_3298_fu_154 <= mux_case_3161403_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        mux_case_3298_fu_154 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_3303_fu_170 <= mux_case_3165415_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        mux_case_3303_fu_170 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_3308_fu_186 <= mux_case_3169427_reload;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        mux_case_3308_fu_186 <= sub_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln148_1_reg_955 <= add_ln148_1_fu_407_p2;
        add_ln150_reg_975 <= add_ln150_fu_463_p2;
        icmp_ln148_reg_951 <= icmp_ln148_fu_401_p2;
        select_ln148_1_reg_965 <= select_ln148_1_fu_439_p3;
        select_ln148_reg_960 <= select_ln148_fu_431_p3;
        trunc_ln149_reg_980 <= trunc_ln149_fu_469_p1;
        trunc_ln149_reg_980_pp0_iter1_reg <= trunc_ln149_reg_980;
        trunc_ln150_reg_970 <= trunc_ln150_fu_447_p1;
        trunc_ln150_reg_970_pp0_iter1_reg <= trunc_ln150_reg_970;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub_reg_1003 <= grp_fu_2002_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        temp2_load_reg_998 <= temp2_q0;
        tmp_18_reg_993 <= tmp_18_fu_625_p11;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        P_0_0_ap_vld = 1'b1;
    end else begin
        P_0_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        P_0_1_ap_vld = 1'b1;
    end else begin
        P_0_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        P_0_2_ap_vld = 1'b1;
    end else begin
        P_0_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        P_0_3_ap_vld = 1'b1;
    end else begin
        P_0_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        P_1_0_ap_vld = 1'b1;
    end else begin
        P_1_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        P_1_1_ap_vld = 1'b1;
    end else begin
        P_1_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        P_1_2_ap_vld = 1'b1;
    end else begin
        P_1_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        P_1_3_ap_vld = 1'b1;
    end else begin
        P_1_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        P_2_0_ap_vld = 1'b1;
    end else begin
        P_2_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        P_2_1_ap_vld = 1'b1;
    end else begin
        P_2_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        P_2_2_ap_vld = 1'b1;
    end else begin
        P_2_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        P_2_3_ap_vld = 1'b1;
    end else begin
        P_2_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        P_3_0_ap_vld = 1'b1;
    end else begin
        P_3_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        P_3_1_ap_vld = 1'b1;
    end else begin
        P_3_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        P_3_2_ap_vld = 1'b1;
    end else begin
        P_3_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        P_3_3_ap_vld = 1'b1;
    end else begin
        P_3_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln148_reg_951 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 3'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        ap_sig_allocacmp_mux_case_0290_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_0290_load = mux_case_0290_fu_126;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        ap_sig_allocacmp_mux_case_0295_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_0295_load = mux_case_0295_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        ap_sig_allocacmp_mux_case_0300_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_0300_load = mux_case_0300_fu_158;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd0) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        ap_sig_allocacmp_mux_case_0305_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_0305_load = mux_case_0305_fu_174;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        ap_sig_allocacmp_mux_case_1291_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_1291_load = mux_case_1291_fu_130;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        ap_sig_allocacmp_mux_case_1296_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_1296_load = mux_case_1296_fu_146;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        ap_sig_allocacmp_mux_case_1301_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_1301_load = mux_case_1301_fu_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd1) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        ap_sig_allocacmp_mux_case_1306_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_1306_load = mux_case_1306_fu_178;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        ap_sig_allocacmp_mux_case_2292_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_2292_load = mux_case_2292_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        ap_sig_allocacmp_mux_case_2297_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_2297_load = mux_case_2297_fu_150;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        ap_sig_allocacmp_mux_case_2302_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_2302_load = mux_case_2302_fu_166;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd2) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        ap_sig_allocacmp_mux_case_2307_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_2307_load = mux_case_2307_fu_182;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd0))) begin
        ap_sig_allocacmp_mux_case_3293_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_3293_load = mux_case_3293_fu_138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd1))) begin
        ap_sig_allocacmp_mux_case_3298_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_3298_load = mux_case_3298_fu_154;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd2))) begin
        ap_sig_allocacmp_mux_case_3303_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_3303_load = mux_case_3303_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln149_reg_980_pp0_iter1_reg == 2'd3) & (trunc_ln150_reg_970_pp0_iter1_reg == 2'd3))) begin
        ap_sig_allocacmp_mux_case_3308_load = sub_reg_1003;
    end else begin
        ap_sig_allocacmp_mux_case_3308_load = mux_case_3308_fu_186;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        temp2_ce0 = 1'b1;
    end else begin
        temp2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign P_0_0 = grp_fu_2002_p_dout0;

assign P_0_1 = grp_fu_2002_p_dout0;

assign P_0_2 = grp_fu_2002_p_dout0;

assign P_0_3 = grp_fu_2002_p_dout0;

assign P_1_0 = grp_fu_2002_p_dout0;

assign P_1_1 = grp_fu_2002_p_dout0;

assign P_1_2 = grp_fu_2002_p_dout0;

assign P_1_3 = grp_fu_2002_p_dout0;

assign P_2_0 = grp_fu_2002_p_dout0;

assign P_2_1 = grp_fu_2002_p_dout0;

assign P_2_2 = grp_fu_2002_p_dout0;

assign P_2_3 = grp_fu_2002_p_dout0;

assign P_3_0 = grp_fu_2002_p_dout0;

assign P_3_1 = grp_fu_2002_p_dout0;

assign P_3_2 = grp_fu_2002_p_dout0;

assign P_3_3 = grp_fu_2002_p_dout0;

assign add_ln148_1_fu_407_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 5'd1);

assign add_ln148_fu_419_p2 = (ap_sig_allocacmp_i_load + 3'd1);

assign add_ln149_fu_648_p2 = (select_ln148_reg_960 + 3'd1);

assign add_ln150_fu_463_p2 = (tmp_s_fu_451_p3 + zext_ln150_fu_459_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign grp_fu_2002_p_ce = 1'b1;

assign grp_fu_2002_p_din0 = tmp_18_reg_993;

assign grp_fu_2002_p_din1 = temp2_load_reg_998;

assign grp_fu_2002_p_opcode = 2'd1;

assign icmp_ln148_fu_401_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_425_p2 = ((ap_sig_allocacmp_j_load == 3'd4) ? 1'b1 : 1'b0);

assign select_ln148_1_fu_439_p3 = ((icmp_ln149_fu_425_p2[0:0] == 1'b1) ? add_ln148_fu_419_p2 : ap_sig_allocacmp_i_load);

assign select_ln148_fu_431_p3 = ((icmp_ln149_fu_425_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_j_load);

assign temp2_address0 = zext_ln150_1_fu_473_p1;

assign tmp_14_fu_533_p9 = 'bx;

assign tmp_15_fu_556_p9 = 'bx;

assign tmp_16_fu_579_p9 = 'bx;

assign tmp_17_fu_602_p9 = 'bx;

assign tmp_18_fu_625_p9 = 'bx;

assign tmp_s_fu_451_p3 = {{trunc_ln150_fu_447_p1}, {2'd0}};

assign trunc_ln149_fu_469_p1 = select_ln148_fu_431_p3[1:0];

assign trunc_ln150_fu_447_p1 = select_ln148_1_fu_439_p3[1:0];

assign zext_ln150_1_fu_473_p1 = add_ln150_reg_975;

assign zext_ln150_fu_459_p1 = select_ln148_fu_431_p3;

endmodule //extendedKalmanFilter_extendedKalmanFilter_Pipeline_VITIS_LOOP_148_28_VITIS_LOOP_149_29
